version: '3.8'
services:
  auth_service:
    container_name: auth_service
    build: ./server/authentication-microservice
    command: npm run dev
    volumes:
      - ./server/authentication-microservice:/usr/app/
      - /usr/app/node_modules
    ports:
      - "8081:8080"
    links:
      - auth_mongo
    depends_on:
      - auth_mongo
    restart: always
    environment:
      - dev=1
      - db_service_name=auth_mongo
      - db_name=auth
      - db_username=admin
      - db_password=admin
      - db_retry_time=3000
      - jwt_secret=secret-jwt-key
  auth_mongo:
    container_name: auth_mongo
    image: mongo:latest
    volumes:
      - ./data/mongo-auth-db:/data/db
    ports:
      - "27017:27017"
    restart: always
  listings_service:
    container_name: listings_service
    build: ./server/listings-microservice
    command: python listings/manage.py runserver 0.0.0.0:8080
    volumes:
      - ./server/listings-microservice:/usr/app/
    ports: 
      - "8082:8080"
    links: 
      - listings_postgres
    depends_on:
      - listings_postgres
    restart: always    
  listings_postgres:
    container_name: listings_postgres
    image: postgres:latest
    volumes:
      - ./data/postgres-listings-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  orders_service:
    container_name: orders_service
    build: ./server/orders-microservice
    command: npm run dev
    volumes:
      - ./server/orders-microservice:/usr/app/
      - /usr/app/node_modules
    ports:
      - "8083:8080"
    links:
      - orders_mongo
    depends_on:
      - orders_mongo
    restart: always
    environment:
      - dev=1
      - db_service_name=orders_mongo
      - db_name=auth
      - db_username=admin
      - db_password=admin
      - db_retry_time=3000
      - jwt_secret=secret-jwt-key
  orders_mongo:
    container_name: orders_mongo
    image: mongo:latest
    volumes:
      - ./data/mongo-orders-db:/data/db
    ports:
      - "27018:27017"
    restart: always
  shipments_service:
    container_name: shipments_service
    build: ./server/shipments-microservice
    command: npm run dev
    volumes:
      - ./server/shipments-microservice:/usr/app/
      - /usr/app/node_modules
    ports:
      - "8084:8080"
    links:
      - shipments_mongo
    depends_on:
      - shipments_mongo
    restart: always
    environment:
      - dev=1
      - db_service_name=shipments_mongo
      - db_name=auth
      - db_username=admin
      - db_password=admin
      - db_retry_time=3000
      - jwt_secret=secret-jwt-key
  shipments_mongo:
    container_name: shipments_mongo
    image: mongo:latest
    volumes:
      - ./data/mongo-shipments-db:/data/db
    ports:
      - "27019:27017"
    restart: always
  chat_service:
    container_name: chat_service
    build: ./server/chat-microservice
    command: npm run dev
    volumes:
      - ./server/chat-microservice:/usr/app/
      - /usr/app/node_modules
    ports:
      - "8085:8080"
    links:
      - chat_mongo
    depends_on:
      - chat_mongo
    restart: always
    environment:
      - dev=1
      - db_service_name=chat_mongo
      - db_name=auth
      - db_username=admin
      - db_password=admin
      - db_retry_time=3000
      - jwt_secret=secret-jwt-key
  chat_mongo:
    container_name: chat_mongo
    image: mongo:latest
    volumes:
      - ./data/mongo-chat-db:/data/db
    ports:
      - "27020:27017"
    restart: always
  micro_nginx:
    container_name: micro_nginx
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service